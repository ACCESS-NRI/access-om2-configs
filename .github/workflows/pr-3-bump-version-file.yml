# This workflow is used to do a major/minor version bump to the `VERSION` file,
# through a comment on the PR.
# This is not done automatically because users may want to modify their config
# based on the result of the reproducibility check.
name: VERSION
on:  # TODO: Can we get the name of the artifact from here?
  issue_comment:
    types:
      - created
      - edited
jobs:
  bump-version:
    name: Bump
    # Bump the `VERSION` file if the comment is made on a PR and starts with '!bump'
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '!bump')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      GH_TOKEN: ${{ secrets.GH_COMMIT_CHECK_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_COMMIT_CHECK_TOKEN }}

      - name: Checkout Associated PR ${{ github.event.issue.number }}
        run: gh pr checkout ${{ github.event.issue.number }}

      - name: VERSION
        id: bump
        run: |
          version=$(cat VERSION)
          regex="(.+-.+)-([0-9]+)\.([0-9]+)"
          if [[ $version =~ $regex ]]; then
            config_info="${BASH_REMATCH[1]}"
            major_version="${BASH_REMATCH[2]}"
            minor_version="${BASH_REMATCH[3]}"
          else
            echo "::error::Invalid version format in VERSION file!"
            exit 1
          fi

          if [[ "${{ contains(github.event.comment.body, 'minor') }}" == "true" ]]; then
            new_minor_version=$((minor_version + 1))
            new_version="${config_info}-${major_version}.${new_minor_version}"
          else if [[ ${{ contains(github.event.comment.body, 'major') }} == "true" ]]; then
            new_major_version=$((major_version + 1))
            new_minor_version=0
            new_version="${config_info}-${new_major_version}.${new_minor_version}"
          else
            echo "::error::Comment was not of the form: '!bump [major|minor]'"
            exit 1
          fi
          echo "$new_version" > VERSION

          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "Bumped VERSION to $new_version as part of ${{ env.RUN_URL }}"
          git push

          echo "before=$version" >> $GITHUB_OUTPUT
          echo "after=$new_version" >> $GITHUB_OUTPUT

      - name: Comment Success
        env:
          BODY: |
            :white_check_mark: Version bumped from `${{ steps.bump.outputs.before }}` to `${{ steps.bump.outputs.after }}` :white_check_mark:
        run:
          gh pr comment --body "${{ env.BODY }}"

      - name: Comment Failure
        if: failure()
        env:
          BODY: |
            :x: Failed to bump version, see ${{ env.RUN_URL }} :x:
        run: gh pr comment --body "${{ env.BODY }}"
