name: Scheduled Checks - Branch Specific
on:
  workflow_call:
    inputs:
      config-tag:
        type: string
        required: true
        description: Tag associated with a config branch that is used in the reproducibility run
jobs:
  repro-ci:
    # Run the given config on the deployment Github Environment (`environment-name`) and upload
    # the test results and checksum.
    uses: access-nri/reproducibility/.github/workflows/checks.yml@main
    with:
      model-name: access-om2
      environment-name: Gadi
      config-tag: ${{ inputs.config-tag }}
      test-markers: checksum
    secrets: inherit
    permissions:
      contents: write

  check-checksum:
    name: Check Repro Results
    # Parse the test results
    needs:
      - repro-ci
    runs-on: ubuntu-latest
    env:
      TESTING_LOCAL_LOCATION: /opt/testing
    outputs:
      # URL for the parsed test results
      check-run-url: ${{ steps.results.outputs.check-url }}
      # Overall result of the checksum repro CI - `pass` (if reproducible), `fail` otherwise
      result: ${{ steps.results.outputs.result }}
      # Version of the checksum compared against the newly generated one
      compared-checksum-version: ${{ steps.results.outputs.compared-checksum-version }}
    steps:
      - name: Download Newly Created Checksum
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.repro-ci.outputs.artifact-name }}
          path: ${{ env.TESTING_LOCAL_LOCATION }}

      - name: Parse Test Report
        id: tests
        uses: EnricoMi/publish-unit-test-result-action/composite@e780361cd1fc1b1a170624547b3ffda64787d365  #v2.12.0
        with:
          files: ${{ env.TESTING_LOCAL_LOCATION }}/checksum/test_report.xml
          comment_mode: off
          check_run: true
          compare_to_earlier_commit: false
          report_individual_runs: true
          report_suite_logs: any

      - name: Checksum Tests Results
        id: results
        run: |
          echo "check-url=${{ fromJson(steps.tests.outputs.json).check_url }}" >> $GITHUB_OUTPUT
          echo "compared-checksum-version=${{ inputs.config-tag }}" >> $GITHUB_OUTPUT
          if [ "${{ fromJson(steps.tests.outputs.json).stats.tests_fail }}" > 0 ]; then
            echo "result=fail" >> $GITHUB_OUTPUT
          else
            echo "result=pass" >> $GITHUB_OUTPUT
          fi

  failed-repro:
    name: Failed Reproduction Notifier
    needs:
      - repro-ci
      - check-checksum
    if: failure() || needs.check-checksum.outputs.result == 'fail'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    env:
      MODEL: access-om2
      MODEL_URL: https://github.com/ACCESS-NRI/access-om2
      CONFIG: access-om2-configs
      CONFIG_URL: https://github.com/ACCESS-NRI/access-om2-configs
      TAG_URL: https://github.com/ACCESS-NRI/access-om2-configs/tags/${{ needs.check-checksum.outputs.compared-checksum-version }}
      RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Create issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          BODY: |
            There was a failure of a monthly reproducibility check on ${{ github.repository }}.
            Logs, checksums and other artifacts can be found at the Failed Run Log link below.

            Model: ${{ env.MODEL }}, found here: ${{ env.MODEL_URL }}
            Config Repo: ${{ env.CONFIG }}, found here: ${{ env.CONFIG_URL }}
            Config Tag Tested for Reproducibility: ${{ needs.check-checksum.outputs.compared-checksum-version }}, found here: ${{ env.TAG_URL }}
            Failed Run Log: ${{ env.RUN_URL }}
            Experiment Location (Gadi): ${{ needs.repro-ci.outputs.experiment-location }}

            Tagging @ACCESS-NRI/model-release
        run: |
          gh issue create \
            --title "Scheduled Repro Check Failed for Config ${{ needs.check-checksum.outputs.compared-checksum-version }}" \
            --label "type:repro-fail,priority:blocker" \
            --body "${{ env.BODY }}"
