name: Repro Checks
on:
  workflow_call:
    inputs:
      model-name:
        type: string
        required: true
        description: The name of the model to check for reproducibility
      config-branch:  # TODO: actually a config-tag now
        type: string
        required: true
        description: A config branch to use for the reproducibility run
    outputs:
      artifact-name:
        value: ${{ jobs.repro.outputs.artifact-name }}
        description: Name of the artifact containing the checksums for this repro run
env:
  CHECKSUMS_LOCAL_LOCATION: /opt/checksums
jobs:
  repro:
    name: Run ${{ github.ref_name }}
    runs-on: ubuntu-latest
    environment: Gadi
    outputs:
      artifact-name: ${{ steps.artifact.outputs.name }}
    steps:
      - name: Checkout Configs Repo
        # for test framework
        uses: actions/checkout@v4
        with:
          ref: main  # TODO: is the test logic ACCESS-OM2 specific?

      - name: Setup SSH
        id: ssh
        uses: access-nri/actions/.github/actions/setup-ssh@main
        with:
          hosts: |
            ${{ secrets.SSH_HOST }}
            ${{ secrets.SSH_HOST_DATA }}
          private-key: ${{ secrets.SSH_KEY }}

      - name: Copy Repro Tests
        # TODO: this will be redundant when the checksum logic is a package
        run: |
          rsync -e 'ssh -i ${{ steps.ssh.outputs.private-key-path }}' \
            test \
            ${{ secrets.SSH_USER}}@${{ secrets.SSH_HOST_DATA }}:${{ vars.REPRO_TEST_LOCATION }}

      - name: Run configuration
        env:
          PAYU_EXPERIMENT_LOCATION: ${{ secrets.PAYU_EXPERIMENTS_LOCATION }}/${{ inputs.model-name }}/${{ inputs.config-branch }}
        # TODO: Does the payu clone fail if there is an existing directory with ^ name
        # TODO: Does payu clone fail if the directory given doesn't exist
        run: |
          ssh -i ${{ steps.ssh.outputs.private-key-path }} /bin/bash<<EOT
          module use ${{ secrets.PAYU_MODULE_LOCATION }}
          module load payu/${{ vars.PAYU_VERSION }}
          mkdir -p ${{ env.PAYU_EXPERIMENT_LOCATION }}
          payu clone --branch ${{ inputs.config-branch }} ${{ github.event.repository.clone_url }} ${{ env.PAYU_EXPERIMENT_LOCATION }}
          cd ${{ env.PAYU_EXPERIMENT_LOCATION }}
          payu run -f
          # wait...then extract checksums
          pytest ${{ vars.REPRO_TEST_LOCATION }} ?
          # use super cool checksum-extraction.py
          mv <wherever checksums are> ${{ vars.PAYU_CHECKSUMS_LOCATION }}
          EOT

      - name: Copy Back Checksums
        run: |
          rsync-e 'ssh -i ${{ steps.ssh.outputs.private-key-path }}' \
              '${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_DATA }}:${{ vars.PAYU_CHECKSUMS_LOCATION }}' \
              ${{ env.CHECKSUMS_LOCAL_LOCATION }}

      - name: Generate Checksum Artifact Name
        id: artifact
        run: echo "name=${{ inputs.model-name }}-${{ inputs.config-branch }}" >> $GITHUB_OUTPUT

      # upload the new truth
      - name: Upload Checksum Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.name }}
          if-no-files-found: error
          path: ${{ env.CHECKSUMS_LOCAL_LOCATION }}
